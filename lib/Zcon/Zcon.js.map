{"version":3,"sources":["../../src/Zcon/Zcon.js"],"names":["PREFIX","px","clsName","IconCache","iconfont","icon","specialViewBox","classnames","args","map","classname","Object","keys","filter","key","join","spinDefault","deprecatedLog","typeFilter","type","deprecatedIcon","newType","console","error","createPrefixIcon","prefix","Zcon","getType","props","getViewBox","p","viewBox","isSpin","spin","includes","style","className","antCls","noUse","otherProps","prefixCls","children","index","hasCache","typeClass","assign","Component","propTypes","PropTypes","string","object","bool","isRequired","arrayOf","defaultProps","undefined"],"mappings":"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","file":"Zcon.js","sourcesContent":["/* eslint-disable react/forbid-prop-types */\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport deprecatedIcon from \"./deprecatedIcon\";\nimport iconfont from \"../../assets/iconfont\";\nimport \"../../assets/Zcon.css\";\n\nconst PREFIX = \"zteicon\";\n\nconst px = (clsName) => `${PREFIX}-${clsName}`;\n\nconst { icon: IconCache, specialViewBox } = iconfont;\n\nconst classnames = (...args) => args.map((classname) => {\n  if (typeof classname === \"string\") {\n    return px(classname);\n  } else if (typeof classname === \"object\") {\n    return Object.keys(classname)\n      .filter((key) => !!classname[key])\n      .map(px)\n      .join(\" \");\n  }\n  return \"\";\n})\n  .join(\" \");\n\nconst spinDefault = [\n  \"loading\",\n  \"loading-3-quarters\",\n];\n\nconst deprecatedLog = {};\n\nconst typeFilter = (type) => {\n  if (deprecatedIcon[type]) {\n    const newType = deprecatedIcon[type];\n    if (!deprecatedLog[type]) {\n      deprecatedLog[type] = 1;\n      /* eslint-disable-next-line no-console */\n      console.error(`[警告]您当前使用的图标 ${type} 已被修改为 ${newType} 。请更换新的名称`);\n    }\n    return newType;\n  }\n  return type;\n};\n\nexport const createPrefixIcon = (prefix = PREFIX) => {\n  class Zcon extends Component {\n    getType = () => {\n      const { type } = this.props;\n      if (typeof type === \"string\") {\n        return typeFilter(type);\n      }\n      return type;\n    };\n\n    getViewBox = (p, type) => {\n      const { viewBox } = this.props;\n      if (viewBox) return viewBox;\n      if (p === PREFIX && specialViewBox[type]) {\n        return specialViewBox[type];\n      }\n      return \"0 0 1024 1024\";\n    };\n\n    isSpin = () => {\n      const { spin } = this.props;\n      const type = this.getType();\n      if (spin) return true;\n      if (spin === false) return false;\n      return spinDefault.includes(type);\n    };\n\n    render() {\n      const {\n        spin, style, className, antCls, prefix: p, viewBox, type: noUse, icon, ...otherProps\n      } = this.props;\n      const type = this.getType();\n\n      const prefixCls = `${PREFIX} ${antCls ? \"anticon\" : \"\"}`;\n      let children = <use xlinkHref={`#${p}-${(type)}`} />;\n\n      if (typeof icon === \"object\") {\n        /* 如果type是object类型，说明自定义传入了icon，所以直接使用type传入的配置即可 */\n        children = icon.map((props, index) => (\n          <path key={`${p}-${type}-${index}`} {...props} />));\n      } else {\n        /* 从预设的Icon中获取 */\n        const hasCache = p === PREFIX && IconCache[type];\n        if (hasCache) {\n          children = IconCache[type].map((props, index) => (\n            <path key={`${p}-${type}-${index}`} {...props} />));\n        }\n      }\n\n      const typeClass = `${p}-${type}`;\n\n      return (\n        <i\n          className={`${prefixCls} ${typeClass} ${classnames({ spin: this.isSpin() })} ${className || \"\"}`}\n          aria-hidden=\"true\"\n          style={Object.assign({}, style)}\n          {...otherProps}\n        >\n          <svg viewBox={this.getViewBox(p, type)}>\n            {\n              children\n            }\n          </svg>\n        </i>\n      );\n    }\n  }\n\n  Zcon.propTypes = {\n    className: PropTypes.string,\n    prefix: PropTypes.string,\n    viewBox: PropTypes.string,\n    style: PropTypes.object,\n    antCls: PropTypes.bool,\n    type: PropTypes.string.isRequired,\n    icon: PropTypes.arrayOf(PropTypes.object),\n    spin: PropTypes.bool,\n  };\n\n  Zcon.defaultProps = {\n    className: undefined,\n    viewBox: undefined,\n    prefix,\n    style: {},\n    spin: undefined,\n    icon: undefined,\n    antCls: false,\n  };\n  return Zcon;\n};\n\nexport default createPrefixIcon();\n"]}