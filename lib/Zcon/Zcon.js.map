{"version":3,"sources":["../../src/Zcon/Zcon.js"],"names":["PREFIX","px","clsName","classnames","args","map","classname","Object","keys","filter","key","join","spinDefault","deprecatedLog","typeFilter","type","deprecatedIcon","newType","console","error","createPrefixIcon","prefix","Zcon","getType","props","getViewBox","p","viewBox","specialViewBox","spin","includes","svg","svgDefault","style","className","antCls","otherProps","prefixCls","children","hasCache","IconCache","index","isSpin","assign","Component","propTypes","PropTypes","string","object","bool","isRequired","defaultProps","undefined"],"mappings":";;;;;;;;;;;8QAAA;;AAOA;;;AANA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AAEA;;;;;;;;;;;;AACA;;AAEA,IAAMA,SAAS,SAAf;;AAEA,IAAMC,KAAK,SAALA,EAAK,CAACC,OAAD;AAAA,SAAgBF,MAAhB,SAA0BE,OAA1B;AAAA,CAAX;;AAEA,IAAMC,aAAa,SAAbA,UAAa;AAAA,oCAAIC,IAAJ;AAAIA,QAAJ;AAAA;;AAAA,SAAaA,KAAKC,GAAL,CAAS,UAACC,SAAD,EAAe;AACtD,QAAI,OAAOA,SAAP,KAAqB,QAAzB,EAAmC;AACjC,aAAOL,GAAGK,SAAH,CAAP;AACD,KAFD,MAEO,IAAI,QAAOA,SAAP,yCAAOA,SAAP,OAAqB,QAAzB,EAAmC;AACxC,aAAOC,OAAOC,IAAP,CAAYF,SAAZ,EACJG,MADI,CACG,UAACC,GAAD;AAAA,eAAS,CAAC,CAACJ,UAAUI,GAAV,CAAX;AAAA,OADH,EAEJL,GAFI,CAEAJ,EAFA,EAGJU,IAHI,CAGC,GAHD,CAAP;AAID;AACD,WAAO,EAAP;AACD,GAV+B,EAW7BA,IAX6B,CAWxB,GAXwB,CAAb;AAAA,CAAnB;;AAaA,IAAMC,cAAc,CAClB,SADkB,EAElB,oBAFkB,CAApB;;AAKA,IAAMC,gBAAgB,EAAtB;;AAEA,IAAMC,aAAa,SAAbA,UAAa,CAACC,IAAD,EAAU;AAC3B,MAAIC,yBAAeD,IAAf,CAAJ,EAA0B;AACxB,QAAME,UAAUD,yBAAeD,IAAf,CAAhB;AACA,QAAI,CAACF,cAAcE,IAAd,CAAL,EAA0B;AACxBF,oBAAcE,IAAd,IAAsB,CAAtB;AACAG,cAAQC,KAAR,qEAA8BJ,IAA9B,wCAA4CE,OAA5C;AACD;AACD,WAAOA,OAAP;AACD;AACD,SAAOF,IAAP;AACD,CAVD;;AAYO,IAAMK,mBAAmB,SAAnBA,gBAAmB,GAAqB;AAAA,MAApBC,MAAoB,uEAAXrB,MAAW;;AAAA,MAC7CsB,IAD6C;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA,oLAEjDC,OAFiD,GAEvC,YAAM;AAAA,YACNR,IADM,GACG,MAAKS,KADR,CACNT,IADM;;AAEd,eAAOD,WAAWC,IAAX,CAAP;AACD,OALgD,QAOjDU,UAPiD,GAOpC,UAACC,CAAD,EAAIX,IAAJ,EAAa;AAAA,YAChBY,OADgB,GACJ,MAAKH,KADD,CAChBG,OADgB;;AAExB,YAAIA,OAAJ,EAAa,OAAOA,OAAP;AACb,YAAID,MAAM1B,MAAN,IAAgB4B,2BAAeb,IAAf,CAApB,EAA0C;AACxC,iBAAOa,2BAAeb,IAAf,CAAP;AACD;AACD,eAAO,eAAP;AACD,OAdgD;AAAA;;AAAA;AAAA;AAAA,+BAgBxC;AAAA,YACCc,IADD,GACU,KAAKL,KADf,CACCK,IADD;;AAEP,YAAMd,OAAO,KAAKQ,OAAL,EAAb;AACA,YAAIM,IAAJ,EAAU,OAAO,IAAP;AACV,YAAIA,SAAS,KAAb,EAAoB,OAAO,KAAP;AACpB,eAAOjB,YAAYkB,QAAZ,CAAqBf,IAArB,CAAP;AACD;AAtBgD;AAAA;AAAA,8BAwBzC;AAAA,YACEgB,GADF,GACU,KAAKP,KADf,CACEO,GADF;;AAEN,YAAMhB,OAAO,KAAKQ,OAAL,EAAb;AACA,YAAIQ,QAAQ,KAAZ,EAAmB,OAAO,KAAP;AACnB;AACA,eAAOC,kBAAWF,QAAX,CAAoBf,IAApB,CAAP;AACD;AA9BgD;AAAA;AAAA,+BAgCxC;AAAA,qBAGH,KAAKS,KAHF;AAAA,YAELK,IAFK,UAELA,IAFK;AAAA,YAECE,GAFD,UAECA,GAFD;AAAA,YAEME,KAFN,UAEMA,KAFN;AAAA,YAEaC,SAFb,UAEaA,SAFb;AAAA,YAEwBC,MAFxB,UAEwBA,MAFxB;AAAA,YAEwCT,CAFxC,UAEgCL,MAFhC;AAAA,YAE2CM,OAF3C,UAE2CA,OAF3C;AAAA,YAEuDS,UAFvD;;AAIP,YAAMrB,OAAO,KAAKQ,OAAL,EAAb;;AAEA,YAAMc,YAAerC,MAAf,UAAyBmC,SAAS,SAAT,GAAqB,EAA9C,CAAN;AACA,YAAIG,WAAW,uCAAK,iBAAeZ,CAAf,SAAqBX,IAA1B,GAAf;;AAEA,YAAMwB,WAAWb,MAAM1B,MAAN,IAAgBwC,qBAAUzB,IAAV,CAAjC;AACA,YAAIwB,QAAJ,EAAc;AACZD,qBAAWE,qBAAUzB,IAAV,EAAgBV,GAAhB,CAAoB,UAACmB,KAAD,EAAQiB,KAAR;AAAA,mBAC7B,iDAAM,KAAQf,CAAR,SAAaX,IAAb,SAAqB0B,KAA3B,IAAwCjB,KAAxC,EAD6B;AAAA,WAApB,CAAX;AAED;;AAED,eACE;AAAA;AAAA;AACE,uBAAca,SAAd,SAA2BlC,WAAW,EAAE0B,MAAM,KAAKa,MAAL,EAAR,EAAX,CAA3B,UAAkER,aAAa,EAA/E,CADF;AAEE,2BAAY,MAFd;AAGE,mBAAO3B,OAAOoC,MAAP,CAAc,EAAd,EAAkBV,KAAlB;AAHT,aAIMG,UAJN;AAME;AAAA;AAAA,cAAK,SAASG,WAAW,eAAX,GAA6B,EAA3C;AAEID;AAFJ;AANF,SADF;AAcD;AA7DgD;;AAAA;AAAA,IAChCM,gBADgC;;AAgEnDtB,OAAKuB,SAAL,GAAiB;AACfX,eAAWY,oBAAUC,MADN;AAEf1B,YAAQyB,oBAAUC,MAFH;AAGfpB,aAASmB,oBAAUC,MAHJ;AAIfd,WAAOa,oBAAUE,MAJF;AAKfb,YAAQW,oBAAUG,IALH;AAMflC,UAAM+B,oBAAUC,MAAV,CAAiBG,UANR;AAOfrB,UAAMiB,oBAAUG,IAPD;AAQflB,SAAKe,oBAAUG;AARA,GAAjB;;AAWA3B,OAAK6B,YAAL,GAAoB;AAClBjB,eAAWkB,SADO;AAElBzB,aAASyB,SAFS;AAGlB/B,kBAHkB;AAIlBY,WAAO,EAJW;AAKlBJ,UAAMuB,SALY;AAMlBrB,SAAKqB,SANa;AAOlBjB,YAAQ;AAPU,GAApB;AASA,SAAOb,IAAP;AACD,CArFM;;;kBAuFQF,kB","file":"Zcon.js","sourcesContent":["/* eslint-disable react/forbid-prop-types */\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport svgDefault from \"./svgIcon\";\nimport deprecatedIcon from \"./deprecatedIcon\";\n\nimport IconCache, { specialViewBox } from \"../../assets/iconfont/iconfont-es\";\n// import \"../../assets/iconfont/iconfont\";\nimport \"../../assets/Zcon.css\";\n// import \"../../assets/iconfont/iconfont.css\";\n\nconst PREFIX = \"zteicon\";\n\nconst px = (clsName) => `${PREFIX}-${clsName}`;\n\nconst classnames = (...args) => args.map((classname) => {\n  if (typeof classname === \"string\") {\n    return px(classname);\n  } else if (typeof classname === \"object\") {\n    return Object.keys(classname)\n      .filter((key) => !!classname[key])\n      .map(px)\n      .join(\" \");\n  }\n  return \"\";\n})\n  .join(\" \");\n\nconst spinDefault = [\n  \"loading\",\n  \"loading-3-quarters\",\n];\n\nconst deprecatedLog = {};\n\nconst typeFilter = (type) => {\n  if (deprecatedIcon[type]) {\n    const newType = deprecatedIcon[type];\n    if (!deprecatedLog[type]) {\n      deprecatedLog[type] = 1;\n      console.error(`[警告]您当前使用的图标 ${type} 已被修改为 ${newType} 。请更换新的名称`);\n    }\n    return newType;\n  }\n  return type;\n};\n\nexport const createPrefixIcon = (prefix = PREFIX) => {\n  class Zcon extends Component {\n    getType = () => {\n      const { type } = this.props;\n      return typeFilter(type);\n    };\n\n    getViewBox = (p, type) => {\n      const { viewBox } = this.props;\n      if (viewBox) return viewBox;\n      if (p === PREFIX && specialViewBox[type]) {\n        return specialViewBox[type];\n      }\n      return \"0 0 1024 1024\";\n    };\n\n    isSpin() {\n      const { spin } = this.props;\n      const type = this.getType();\n      if (spin) return true;\n      if (spin === false) return false;\n      return spinDefault.includes(type);\n    }\n\n    isSvg() {\n      const { svg } = this.props;\n      const type = this.getType();\n      if (svg === false) return false;\n      // if (svg && svgDefault.includes(type)) return true;\n      return svgDefault.includes(type);\n    }\n\n    render() {\n      const {\n        spin, svg, style, className, antCls, prefix: p, viewBox, ...otherProps\n      } = this.props;\n      const type = this.getType();\n\n      const prefixCls = `${PREFIX} ${antCls ? \"anticon\" : \"\"}`;\n      let children = <use xlinkHref={`#${p}-${(type)}`} />;\n\n      const hasCache = p === PREFIX && IconCache[type];\n      if (hasCache) {\n        children = IconCache[type].map((props, index) => (\n          <path key={`${p}-${type}-${index}`} {...props} />));\n      }\n\n      return (\n        <i\n          className={`${prefixCls} ${classnames({ spin: this.isSpin() })} ${className || \"\"}`}\n          aria-hidden=\"true\"\n          style={Object.assign({}, style)}\n          {...otherProps}\n        >\n          <svg viewBox={hasCache ? \"0 0 1024 1024\" : \"\"}>\n            {\n              children\n            }\n          </svg>\n        </i>\n      );\n    }\n  }\n\n  Zcon.propTypes = {\n    className: PropTypes.string,\n    prefix: PropTypes.string,\n    viewBox: PropTypes.string,\n    style: PropTypes.object,\n    antCls: PropTypes.bool,\n    type: PropTypes.string.isRequired,\n    spin: PropTypes.bool,\n    svg: PropTypes.bool,\n  };\n\n  Zcon.defaultProps = {\n    className: undefined,\n    viewBox: undefined,\n    prefix,\n    style: {},\n    spin: undefined,\n    svg: undefined,\n    antCls: false,\n  };\n  return Zcon;\n};\n\nexport default createPrefixIcon();\n"]}