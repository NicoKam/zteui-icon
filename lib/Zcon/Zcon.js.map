{"version":3,"sources":["../../src/Zcon/Zcon.jsx"],"names":["PREFIX","px","clsName","classnames","args","map","classname","Object","keys","filter","key","join","spinDefault","svgDefault","Zcon","props","spin","_","includes","type","svg","style","className","otherProps","isSvg","isSpin","assign","Component","propTypes","PropTypes","string","isRequired","bool","defaultProps"],"mappings":";;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAGA;;AACA;;AACA;;;;;;;;;;;;AAEA,IAAMA,SAAS,SAAf;;AAGA,IAAMC,KAAK,SAALA,EAAK,CAACC,OAAD;AAAA,SAAgBF,MAAhB,SAA0BE,OAA1B;AAAA,CAAX;;AAEA,IAAMC,aAAa,SAAbA,UAAa;AAAA,oCAAIC,IAAJ;AAAIA,QAAJ;AAAA;;AAAA,SAAaA,KAAKC,GAAL,CAAS,UAACC,SAAD,EAAe;AACtD,QAAI,OAAOA,SAAP,KAAqB,QAAzB,EAAmC;AACjC,aAAOL,GAAGK,SAAH,CAAP;AACD,KAFD,MAEO,IAAI,QAAOA,SAAP,yCAAOA,SAAP,OAAqB,QAAzB,EAAmC;AACxC,aAAOC,OAAOC,IAAP,CAAYF,SAAZ,EACJG,MADI,CACG,UAACC,GAAD;AAAA,eAAS,CAAC,CAACJ,UAAUI,GAAV,CAAX;AAAA,OADH,EAEJL,GAFI,CAEAJ,EAFA,EAGJU,IAHI,CAGC,GAHD,CAAP;AAID;AACD,WAAO,EAAP;AACD,GAV+B,EAW7BA,IAX6B,CAWxB,GAXwB,CAAb;AAAA,CAAnB;;AAaA,IAAMC,cAAc,CAClB,SADkB,EAElB,oBAFkB,CAApB;;AAKA;AACA,IAAMC,aAAa,CACjB,eADiB,EAEjB,iBAFiB,EAGjB,SAHiB,EAIjB,OAJiB,EAKjB,kBALiB,EAMjB,oBANiB,EAOjB,iBAPiB,EAQjB,qBARiB,EASjB,oBATiB,CAAnB;;IAYMC,I;;;;;;;;;;;6BACK;AACP,UAAI,KAAKC,KAAL,CAAWC,IAAf,EAAqB,OAAO,IAAP;AACrB,UAAI,KAAKD,KAAL,CAAWC,IAAX,KAAoB,KAAxB,EAA+B,OAAO,KAAP;AAC/B,aAAOC,iBAAEC,QAAF,CAAWN,WAAX,EAAwB,KAAKG,KAAL,CAAWI,IAAnC,CAAP;AACD;;;4BAEO;AACN,UAAI,KAAKJ,KAAL,CAAWK,GAAf,EAAoB,OAAO,IAAP;AACpB,UAAI,KAAKL,KAAL,CAAWK,GAAX,KAAmB,KAAvB,EAA8B,OAAO,KAAP;AAC9B,aAAOH,iBAAEC,QAAF,CAAWL,UAAX,EAAuB,KAAKE,KAAL,CAAWI,IAAlC,CAAP;AACD;;;6BAEQ;AAAA,mBAGH,KAAKJ,KAHF;AAAA,UAELI,IAFK,UAELA,IAFK;AAAA,UAECH,IAFD,UAECA,IAFD;AAAA,UAEOI,GAFP,UAEOA,GAFP;AAAA,UAEYC,KAFZ,UAEYA,KAFZ;AAAA,UAEmBC,SAFnB,UAEmBA,SAFnB;AAAA,UAEiCC,UAFjC;;AAKP,UAAI,KAAKC,KAAL,EAAJ,EAAkB;AAChB,eACE;AAAA;AAAA;AACE,uBAAcxB,MAAd,SAAwBG,WAAW,EAAEa,MAAM,KAAKS,MAAL,EAAR,EAAX,CAAxB,UAA+DH,aAAa,EAA5E,CADF;AAEE,2BAAY;AAFd;AAIE,iDAAK,iBAAerB,GAAGkB,IAAH,CAApB;AAJF,SADF;AAQD;;AAED,aACE;AACE,mBAAcnB,MAAd,SAAwBG,WAAWgB,IAAX,EAAiB,EAAEH,MAAM,KAAKS,MAAL,EAAR,EAAjB,CAAxB,UAAqEH,aAAa,EAAlF,CADF;AAEE,eAAOL,iBAAES,MAAF,CAAS,EAAT,EAAaL,KAAb;AAFT,SAGME,UAHN,EADF;AAOD;;;;EApCgBI,gB;;AAuCnBb,KAAKc,SAAL,GAAiB;AACfT,QAAMU,oBAAUC,MAAV,CAAiBC,UADR;AAEff,QAAMa,oBAAUG,IAFD;AAGfZ,OAAKS,oBAAUG;AAHA,CAAjB;;AAMAlB,KAAKmB,YAAL,GAAoB,EAApB;;kBAEenB,I","file":"Zcon.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\n\nimport '../../assets/iconfont/iconfont';\nimport '../../assets/Zcon.css';\nimport '../../assets/iconfont/iconfont.css';\n\nconst PREFIX = 'zteicon';\n\n\nconst px = (clsName) => `${PREFIX}-${clsName}`;\n\nconst classnames = (...args) => args.map((classname) => {\n  if (typeof classname === 'string') {\n    return px(classname);\n  } else if (typeof classname === 'object') {\n    return Object.keys(classname)\n      .filter((key) => !!classname[key])\n      .map(px)\n      .join(' ');\n  }\n  return '';\n})\n  .join(' ');\n\nconst spinDefault = [\n  'loading',\n  'loading-3-quarters',\n];\n\n/* 多色图标 */\nconst svgDefault = [\n  'police-avatar',\n  'in-conversation',\n  'airport',\n  'hotel',\n  'track-point-blue',\n  'camera-point-samll',\n  'track-point-red',\n  'location-point-blue',\n  'location-point-red',\n];\n\nclass Zcon extends Component {\n  isSpin() {\n    if (this.props.spin) return true;\n    if (this.props.spin === false) return false;\n    return _.includes(spinDefault, this.props.type);\n  }\n\n  isSvg() {\n    if (this.props.svg) return true;\n    if (this.props.svg === false) return false;\n    return _.includes(svgDefault, this.props.type);\n  }\n\n  render() {\n    const {\n      type, spin, svg, style, className, ...otherProps\n    } = this.props;\n\n    if (this.isSvg()) {\n      return (\n        <svg\n          className={`${PREFIX} ${classnames({ spin: this.isSpin() })} ${className || ''}`}\n          aria-hidden=\"true\"\n        >\n          <use xlinkHref={`#${px(type)}`} />\n        </svg>\n      );\n    }\n\n    return (\n      <i\n        className={`${PREFIX} ${classnames(type, { spin: this.isSpin() })} ${className || ''}`}\n        style={_.assign({}, style)}\n        {...otherProps}\n      />\n    );\n  }\n}\n\nZcon.propTypes = {\n  type: PropTypes.string.isRequired,\n  spin: PropTypes.bool,\n  svg: PropTypes.bool,\n};\n\nZcon.defaultProps = {};\n\nexport default Zcon;\n"]}