{"version":3,"sources":["../../src/Zcon/Zcon.js"],"names":["PREFIX","px","clsName","classnames","args","map","classname","Object","keys","filter","key","join","spinDefault","deprecatedLog","typeFilter","type","deprecatedIcon","newType","console","error","createPrefixIcon","prefix","Zcon","getType","props","spin","includes","svg","svgDefault","style","className","antCls","p","otherProps","prefixCls","children","hasCache","IconCache","index","isSpin","assign","Component","propTypes","PropTypes","string","object","bool","isRequired","defaultProps","undefined"],"mappings":"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","file":"Zcon.js","sourcesContent":["/* eslint-disable react/forbid-prop-types */\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport svgDefault from \"./svgIcon\";\nimport deprecatedIcon from \"./deprecatedIcon\";\n\nimport IconCache from \"../../assets/iconfont/iconfont-es\";\n// import \"../../assets/iconfont/iconfont\";\nimport \"../../assets/Zcon.css\";\n// import \"../../assets/iconfont/iconfont.css\";\n\nconst PREFIX = \"zteicon\";\n\nconst px = (clsName) => `${PREFIX}-${clsName}`;\n\nconst classnames = (...args) => args.map((classname) => {\n  if (typeof classname === \"string\") {\n    return px(classname);\n  } else if (typeof classname === \"object\") {\n    return Object.keys(classname)\n      .filter((key) => !!classname[key])\n      .map(px)\n      .join(\" \");\n  }\n  return \"\";\n})\n  .join(\" \");\n\nconst spinDefault = [\n  \"loading\",\n  \"loading-3-quarters\",\n];\n\nconst deprecatedLog = {};\n\nconst typeFilter = (type) => {\n  if (deprecatedIcon[type]) {\n    const newType = deprecatedIcon[type];\n    if (!deprecatedLog[type]) {\n      deprecatedLog[type] = 1;\n      console.error(`[警告]您当前使用的图标 ${type} 已被修改为 ${newType} 。请更换新的名称`);\n    }\n    return newType;\n  }\n  return type;\n};\n\nexport const createPrefixIcon = (prefix = PREFIX) => {\n  class Zcon extends Component {\n    getType = () => typeFilter(this.props.type);\n\n    isSpin() {\n      const { spin } = this.props;\n      const type = this.getType();\n      if (spin) return true;\n      if (spin === false) return false;\n      return spinDefault.includes(type);\n    }\n\n    isSvg() {\n      const { svg } = this.props;\n      const type = this.getType();\n      if (svg === false) return false;\n      // if (svg && svgDefault.includes(type)) return true;\n      return svgDefault.includes(type);\n    }\n\n    render() {\n      const {\n        spin, svg, style, className, antCls, prefix: p, ...otherProps\n      } = this.props;\n      const type = this.getType();\n\n      const prefixCls = `${PREFIX} ${antCls ? \"anticon\" : \"\"}`;\n      let children = <use xlinkHref={`#${p}-${(type)}`} />;\n\n      const hasCache = p === PREFIX && IconCache[type];\n      if (hasCache) {\n        children = IconCache[type].map((props, index) => (\n          <path key={`${p}-${type}-${index}`} {...props} />));\n      }\n\n      return (\n        <svg\n          className={`${prefixCls} ${classnames({ spin: this.isSpin() })} ${className || \"\"}`}\n          aria-hidden=\"true\"\n          style={Object.assign({}, style)}\n          viewBox={hasCache ? \"0 0 1024 1024\" : \"\"}\n          {...otherProps}\n        >\n          {\n            children\n          }\n        </svg>\n      );\n    }\n  }\n\n  Zcon.propTypes = {\n    className: PropTypes.string,\n    prefix: PropTypes.string,\n    style: PropTypes.object,\n    antCls: PropTypes.bool,\n    type: PropTypes.string.isRequired,\n    spin: PropTypes.bool,\n    svg: PropTypes.bool,\n  };\n\n  Zcon.defaultProps = {\n    className: undefined,\n    prefix,\n    style: {},\n    spin: undefined,\n    svg: undefined,\n    antCls: false,\n  };\n  return Zcon;\n};\n\nexport default createPrefixIcon();\n"]}