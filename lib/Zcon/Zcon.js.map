{"version":3,"sources":["../../src/Zcon/Zcon.jsx"],"names":["PREFIX","px","clsName","classnames","args","map","classname","Object","keys","filter","key","join","spinDefault","svgDefault","Zcon","props","spin","includes","type","svg","style","className","otherProps","isSvg","isSpin","assign","Component","propTypes","PropTypes","string","object","isRequired","bool","defaultProps"],"mappings":"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","file":"Zcon.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport '../../assets/iconfont/iconfont';\r\nimport '../../assets/Zcon.css';\r\nimport '../../assets/iconfont/iconfont.css';\r\n\r\nconst PREFIX = 'zteicon';\r\n\r\n\r\nconst px = (clsName) => `${PREFIX}-${clsName}`;\r\n\r\nconst classnames = (...args) => args.map((classname) => {\r\n  if (typeof classname === 'string') {\r\n    return px(classname);\r\n  } else if (typeof classname === 'object') {\r\n    return Object.keys(classname)\r\n      .filter((key) => !!classname[key])\r\n      .map(px)\r\n      .join(' ');\r\n  }\r\n  return '';\r\n})\r\n  .join(' ');\r\n\r\nconst spinDefault = [\r\n  'loading',\r\n  'loading-3-quarters',\r\n];\r\n\r\n/* 多色图标 */\r\nconst svgDefault = [\r\n  'police-avatar',\r\n  'in-conversation',\r\n  'airport',\r\n  'hotel',\r\n  'track-point-blue',\r\n  'camera-point-samll',\r\n  'track-point-red',\r\n  'location-point-blue',\r\n  'location-point-red',\r\n  'judicial-circle-hover',\r\n  'judicial-circle',\r\n  'location-blue',\r\n  'gun-bubble-blue',\r\n  'gun-bubble-white',\r\n  'gun-bubble-black',\r\n];\r\n\r\nclass Zcon extends Component {\r\n  isSpin() {\r\n    if (this.props.spin) return true;\r\n    if (this.props.spin === false) return false;\r\n    return spinDefault.includes(this.props.type);\r\n  }\r\n\r\n  isSvg() {\r\n    if (this.props.svg) return true;\r\n    if (this.props.svg === false) return false;\r\n    return svgDefault.includes(this.props.type);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      type, spin, svg, style, className, ...otherProps\r\n    } = this.props;\r\n\r\n    if (this.isSvg()) {\r\n      return (\r\n        <svg\r\n          className={`${PREFIX} ${classnames({ spin: this.isSpin() })} ${className || ''}`}\r\n          aria-hidden=\"true\"\r\n        >\r\n          <use xlinkHref={`#${px(type)}`} />\r\n        </svg>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <i\r\n        className={`${PREFIX} ${classnames(type, { spin: this.isSpin() })} ${className || ''}`}\r\n        style={Object.assign({}, style)}\r\n        {...otherProps}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nZcon.propTypes = {\r\n  className: PropTypes.string,\r\n  style: PropTypes.object,\r\n  type: PropTypes.string.isRequired,\r\n  spin: PropTypes.bool,\r\n  svg: PropTypes.bool,\r\n};\r\n\r\nZcon.defaultProps = {};\r\n\r\nexport default Zcon;\r\n"]}