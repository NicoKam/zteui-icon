{"version":3,"sources":["../../src/Zcon/Zcon.jsx"],"names":["PREFIX","px","clsName","classnames","args","map","classname","Object","keys","filter","key","join","spinDefault","Zcon","props","spin","includes","type","svg","svgDefault","style","className","antCls","otherProps","prefixCls","isSvg","isSpin","assign","Component","propTypes","PropTypes","string","object","bool","isRequired","defaultProps"],"mappings":";;;;;;;;;;8QAAA;;;AACA;;;;AACA;;;;AACA;;;;AAGA;;AACA;;AACA;;;;;;;;;;;;AAEA,IAAMA,SAAS,SAAf;;AAGA,IAAMC,KAAK,SAALA,EAAK,CAACC,OAAD;AAAA,SAAgBF,MAAhB,SAA0BE,OAA1B;AAAA,CAAX;;AAEA,IAAMC,aAAa,SAAbA,UAAa;AAAA,oCAAIC,IAAJ;AAAIA,QAAJ;AAAA;;AAAA,SAAaA,KAAKC,GAAL,CAAS,UAACC,SAAD,EAAe;AACtD,QAAI,OAAOA,SAAP,KAAqB,QAAzB,EAAmC;AACjC,aAAOL,GAAGK,SAAH,CAAP;AACD,KAFD,MAEO,IAAI,QAAOA,SAAP,yCAAOA,SAAP,OAAqB,QAAzB,EAAmC;AACxC,aAAOC,OAAOC,IAAP,CAAYF,SAAZ,EACJG,MADI,CACG,UAACC,GAAD;AAAA,eAAS,CAAC,CAACJ,UAAUI,GAAV,CAAX;AAAA,OADH,EAEJL,GAFI,CAEAJ,EAFA,EAGJU,IAHI,CAGC,GAHD,CAAP;AAID;AACD,WAAO,EAAP;AACD,GAV+B,EAW7BA,IAX6B,CAWxB,GAXwB,CAAb;AAAA,CAAnB;;AAaA,IAAMC,cAAc,CAClB,SADkB,EAElB,oBAFkB,CAApB;;IAKMC,I;;;;;;;;;;;6BACK;AACP,UAAI,KAAKC,KAAL,CAAWC,IAAf,EAAqB,OAAO,IAAP;AACrB,UAAI,KAAKD,KAAL,CAAWC,IAAX,KAAoB,KAAxB,EAA+B,OAAO,KAAP;AAC/B,aAAOH,YAAYI,QAAZ,CAAqB,KAAKF,KAAL,CAAWG,IAAhC,CAAP;AACD;;;4BAEO;AACN,UAAI,KAAKH,KAAL,CAAWI,GAAX,KAAmB,KAAvB,EAA8B,OAAO,KAAP;AAC9B;AACA,aAAOC,kBAAWH,QAAX,CAAoB,KAAKF,KAAL,CAAWG,IAA/B,CAAP;AACD;;;6BAEQ;AAAA,mBAGH,KAAKH,KAHF;AAAA,UAELG,IAFK,UAELA,IAFK;AAAA,UAECF,IAFD,UAECA,IAFD;AAAA,UAEOG,GAFP,UAEOA,GAFP;AAAA,UAEYE,KAFZ,UAEYA,KAFZ;AAAA,UAEmBC,SAFnB,UAEmBA,SAFnB;AAAA,UAE8BC,MAF9B,UAE8BA,MAF9B;AAAA,UAEyCC,UAFzC;;AAKP,UAAMC,YAAexB,MAAf,UAAyBsB,SAAS,SAAT,GAAqB,EAA9C,CAAN;;AAEA,UAAI,KAAKG,KAAL,EAAJ,EAAkB;AAChB,eACE;AAAA;AAAA;AACE,uBAAcD,SAAd,SAA2BrB,WAAW,EAAEY,MAAM,KAAKW,MAAL,EAAR,EAAX,CAA3B,UAAkEL,aAAa,EAA/E,CADF;AAEE,2BAAY;AAFd;AAIE,iDAAK,iBAAepB,GAAGgB,IAAH,CAApB;AAJF,SADF;AAQD;;AAED,aACE;AACE,mBAAcO,SAAd,SAA2BrB,WAAWc,IAAX,EAAiB,EAAEF,MAAM,KAAKW,MAAL,EAAR,EAAjB,CAA3B,UAAwEL,aAAa,EAArF,CADF;AAEE,eAAOd,OAAOoB,MAAP,CAAc,EAAd,EAAkBP,KAAlB;AAFT,SAGMG,UAHN,EADF;AAOD;;;;EAtCgBK,gB;;AAyCnBf,KAAKgB,SAAL,GAAiB;AACfR,aAAWS,oBAAUC,MADN;AAEfX,SAAOU,oBAAUE,MAFF;AAGfV,UAAQQ,oBAAUG,IAHH;AAIfhB,QAAMa,oBAAUC,MAAV,CAAiBG,UAJR;AAKfnB,QAAMe,oBAAUG,IALD;AAMff,OAAKY,oBAAUG;AANA,CAAjB;;AASApB,KAAKsB,YAAL,GAAoB;AAClBb,UAAQ;AADU,CAApB;;kBAIeT,I","file":"Zcon.js","sourcesContent":["/* eslint-disable react/forbid-prop-types */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport svgDefault from './svgIcon';\n\n\nimport '../../assets/iconfont/iconfont';\nimport '../../assets/Zcon.css';\nimport '../../assets/iconfont/iconfont.css';\n\nconst PREFIX = 'zteicon';\n\n\nconst px = (clsName) => `${PREFIX}-${clsName}`;\n\nconst classnames = (...args) => args.map((classname) => {\n  if (typeof classname === 'string') {\n    return px(classname);\n  } else if (typeof classname === 'object') {\n    return Object.keys(classname)\n      .filter((key) => !!classname[key])\n      .map(px)\n      .join(' ');\n  }\n  return '';\n})\n  .join(' ');\n\nconst spinDefault = [\n  'loading',\n  'loading-3-quarters',\n];\n\nclass Zcon extends Component {\n  isSpin() {\n    if (this.props.spin) return true;\n    if (this.props.spin === false) return false;\n    return spinDefault.includes(this.props.type);\n  }\n\n  isSvg() {\n    if (this.props.svg === false) return false;\n    // if (this.props.svg && svgDefault.includes(this.props.type)) return true;\n    return svgDefault.includes(this.props.type);\n  }\n\n  render() {\n    const {\n      type, spin, svg, style, className, antCls, ...otherProps\n    } = this.props;\n\n    const prefixCls = `${PREFIX} ${antCls ? 'anticon' : ''}`;\n\n    if (this.isSvg()) {\n      return (\n        <svg\n          className={`${prefixCls} ${classnames({ spin: this.isSpin() })} ${className || ''}`}\n          aria-hidden=\"true\"\n        >\n          <use xlinkHref={`#${px(type)}`} />\n        </svg>\n      );\n    }\n\n    return (\n      <i\n        className={`${prefixCls} ${classnames(type, { spin: this.isSpin() })} ${className || ''}`}\n        style={Object.assign({}, style)}\n        {...otherProps}\n      />\n    );\n  }\n}\n\nZcon.propTypes = {\n  className: PropTypes.string,\n  style: PropTypes.object,\n  antCls: PropTypes.bool,\n  type: PropTypes.string.isRequired,\n  spin: PropTypes.bool,\n  svg: PropTypes.bool,\n};\n\nZcon.defaultProps = {\n  antCls: false,\n};\n\nexport default Zcon;\n"]}